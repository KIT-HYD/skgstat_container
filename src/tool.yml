tools:
  variogram:
    title: Variogram fitting
    description: Estimate an empirical variogram and fit a model
    version: 1.1
    parameters:
      coordinates:
        type: file
        description: Pass either a (N, D) shaped numpy array, or a .mat file containing the matrix of observation location coordinates
      values:
        type: file
        description: Pass either a (N, 1) shaped numpy array or a .mat file containing the matrix of observations
      n_lags: 
        type: integer
        min: 3
        default: 10
        description: Number of separating distance lag classes. Is ignored for bin_funcs [fd, sturges, scott, doane, sqrt]
      bin_func:
        type: enum
        description: Function to group the distance matrix into lag classes.
        default: even
        values:
          - even
          - uniform
          - fd
          - sturges
          - scott
          - doane
          - sqrt
          - kmeans
          - ward
      model:
        type: enum
        description: Interpretive theoretical variogram model function to model the covariance
        default: spherical
        values:
          - spherical
          - exponential
          - gaussian
          - matern
          - stable
          - cubic
      estimator:
        type: enum
        description: Semi-variance estimation method to calculate the empirical variogram
        default: matheron
        values:
          - matheron
          - cressie
          - dowd
      maxlag:
        type: string
        optional: true
        description: Can be 'median', 'mean', a number < 1 for a ratio of maximum separating distance or a number > 1 for an absolute distance 
      fit_method:
        type: enum
        values:
          - trf
          - lm
          - manual
      use_nugget:
        type: bool
        default: false
        description: Enable the nugget parameter. Defaults to False, which will set the nugget parameter to 0.
      fit_range:
        type: float
        optional: true
        description: Only valid if fit_method='manual'. The variogram effective range.
      fit_sill:
        type: float
        optional: tre
        description: Only valid if fit_method='manual'. The variogram sill.
      fit_nugget:
        type: float
        optional: true
        description: Only valid if fit_method='manual'. The variogram nugget. 
      fit_sigma:
        type: enum
        default: None
        values:
          - None
          - linear
          - exp
          - sqrt
          - sq
        description: Use a distance dependent weight on fits to favor closer bins. Do not set for 
  kriging:
    title: Kriging interpolation
    description: Utilize GSTools to interpolate to target grid using an estimated variogram 
    version: 1.0
    parameters:
      coordinates:
        type: file
      values:
        type: file
      variogram:
        type: file
        description: A JSON file containing the variogram parameters as returned by Variogram.describe()['params']
      grid:
        type: string
        description: The grid size needs to be defined by a string like NNxMM, where NN are the number of rows and MM the number of columns 
      algorithm:
        type: enum
        values:
          - simple
          - ordinary
          - universal
      mean: 
        type: float
        description: Real Mean value of the field. Only needed for Simple Kringing.
        optional: true
      drift_functions:
        type: enum
        values:
          - linear
          - quadratic
        description: Predefined drift function. Only needed for Universal Kriging.
        optional: true
  simulation:
    title: Geostatistical simulation
    description: Perform an iterative geostatistical simulation using the method after He√üe (2013)
    version: 1.0
    parameters:
      coordinates:
        type: file
      values:
        type: file
      variogram:
        type: file
        description: A JSON file containing the variogram parameters as returned by Variogram.describe()['params']
      grid:
        type: string
        description: The grid size needs to be defined by a string like NNxMM, where NN are the number of rows and MM the number of columns 
      n_simulations:
        type: int
        description: Number of simulations to run. Defaults to 100
      seed:
        type: int
        description: Seed for the random number generator. Defaults to 42. It is highly recommended to change this number on every run
  sample:
    title: Sample field data
    description: | 
      In oder to work with the geostatistical toolbox, geospatial data needs to be broken down
      to a field representation. The tool will write two arrays to disk: the coordinates
      at which the field was sampled and the field quantities at these locations.
    version: 1.0
    parameters:
      field:
        type: file
        description: | 
          field repesentation as .dat (1D, 2D) or .nc (ND) with only a single variable.
      sample_size:
        type: integer
      method:
        type: enum
        values:
          - random
          - grid
      seed:
        type: int
        description: Only valid for method='random' sampling. Initial state of the random number generator.
      spacing:
        type: integer
        array: true
        description: | 
          Only valid for method='grid'. Either spacing or shape is mandatory.
          Either one integer, or an integer for each dimension of the field. 
          This number specifies the grid spacing along the respective axis.
      shape:
        type:  integer
        array: true
        description: | 
          Only valid for method='grid'. Either spacing or shape is mandatory.
          Either one integer, or an integer for each dimension of the field. 
          This number specifies the number of grid cells along the respective axis.
      offset:
        type: integer
        array: true
        description: |
          Only valid for method='grid'. Optional parameter.
          Either one integer or an integer for each dimension of the field.
          Specifies the offset from the field boundary in grid units.
  cross-validation:
    title: Leave-one-out cross-validation
    description: | 
      Run a leave-one-out cross-validation for any given variogram parameterization. 
      The cross validation is done using orinary kriging on all but one condition points
      to predict the point. Returns either the MAE, MAD or RMSE of observations ~ predictions
    version: 1.0
    parameters:
      coordinates:
        type: file
      values:
        type: file
      variogram:
        type: file
        description: A JSON file containing the variogram parameters as returned by Variogram.describe()['params']
      measure:
        type: enum
        values:
          - rmse
          - mae
          - mad
        description: Measure to assess the cross-validation